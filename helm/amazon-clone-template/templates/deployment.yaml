{{- $envConfig := get .Values.environment .Values.deploymentEnvironment }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{- include "amazon-clone-template.containerName" . }}"
  namespace: {{ include "amazon-clone-template.namespace" . }}
  labels:
    {{- include "amazon-clone-template.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "amazon-clone-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.targetPort }}"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "amazon-clone-template.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: "{{- include "amazon-clone-template.containerName" . }}"
          image: "{{ .Values.image.repository }}:{{ .Values.imageVersion }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          ports:
          - containerPort: {{ .Values.service.targetPort }}
          volumeMounts:
            - name: application-config
              mountPath: "/config"   # https://docs.spring.io/spring-boot/docs/1.0.1.RELEASE/reference/html/boot-features-external-config.html#boot-features-external-config-application-property-files
              readOnly: true
            - name: logging-config
              mountPath: "/logback"
              readOnly: true
      
          {{- if .Values.probeUrl.enabled }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 100
            periodSeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 100
            periodSeconds: 30
            timeoutSeconds: 30
          {{- end }}

      volumes:
        - name: application-config
          secret:
            secretName: "{{- include "amazon-clone-template.fullname" . }}-{{ .Values.deploymentEnvironment }}"
            items:
              - key: "{{- include "amazon-clone-template.fullname" . }}-{{ .Values.deploymentEnvironment }}.yaml"
                path: application.yaml
        - name: logging-config
          configMap:
            name: {{ .Values.logbackName }}-{{ .Values.deploymentEnvironment }}
            items:
              - key: {{ .Values.logbackName }}-{{ .Values.deploymentEnvironment }}.xml
                path: logback-spring.xml
